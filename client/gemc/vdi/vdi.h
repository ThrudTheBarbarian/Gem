//
//  vdi.h
//  client
//
//  Created by ThrudTheBarbarian on 9/7/23.
//

#ifndef vdi_h
#define vdi_h


/*****************************************************************************\
|*   3   : Clear a physical workstation (and all virtual workstations attached)
\*****************************************************************************/
void v_clrwk(void);

/*****************************************************************************\
|*   5.1 : Get the number of character cells on the alpha screen
\*****************************************************************************/
void vq_chcells(int16_t handle, int16_t* rows, int16_t* cols);

/*****************************************************************************\
|*   5.2 : Exit alpha mode
\*****************************************************************************/
void vq_exit_cur(int handle);

/*****************************************************************************\
|*   5.3 : Enter alpha mode
\*****************************************************************************/
void v_enter_cur(int handle);

/*****************************************************************************\
|*   5.4 : Cursor up if possible
\*****************************************************************************/
void v_curup(int handle);

/*****************************************************************************\
|*   5.5 : Cursor down if possible
\*****************************************************************************/
void v_curdown(int handle);

/*****************************************************************************\
|*   5.6 : Cursor right if possible
\*****************************************************************************/
void v_curright(int handle);

/*****************************************************************************\
|*   5.7 : Cursor left if possible
\*****************************************************************************/
void v_curleft(int handle);

/*****************************************************************************\
|*   5.8 : Cursor home (to 0,0)
\*****************************************************************************/
void v_curhome(int handle);

/*****************************************************************************\
|*   5.9 : Erase to end of screen
\*****************************************************************************/
void v_eeos(int handle);

/*****************************************************************************\
|*   5.10 : Erase to end of line
\*****************************************************************************/
void v_eeol(int handle);

/*****************************************************************************\
|*   5.11 : Get the number of character cells on the alpha screen
\*****************************************************************************/
void vs_curadress(int16_t handle, int16_t row, int16_t col);

/*****************************************************************************\
|*   5.12 : Output text to the current cursor position
\*****************************************************************************/
void v_curtext(int16_t handle, const char *str);

/*****************************************************************************\
|*   5.13 : Enable reverse-video
\*****************************************************************************/
void v_rvon(int handle);

/*****************************************************************************\
|*   5.14 : Disable reverse-video
\*****************************************************************************/
void v_rvoff(int handle);

/*****************************************************************************\
|*   5.15 : Get the position of the cursor on the screen
\*****************************************************************************/
void vq_curaddress(int16_t handle, int16_t* row, int16_t* col);

/*****************************************************************************\
|* 100   : Open a virtual workstation
\*****************************************************************************/
void v_opnvwk(int16_t *workIn, int16_t *handle, int16_t *workOut);


#endif /* vdi_h */
